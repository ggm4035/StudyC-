#include <iostream>
using std::cout;
using std::endl;

class AAA
{
private:
	int num;
public:
	AAA(int n = 0) : num(n)
	{
		cout << "AAA(int n = 0)" << endl;
	}
	AAA(const AAA& ref) : num(ref.num)
	{
		cout << "AAA(const AAA& ref)" << endl;
	}
	AAA& operator=(const AAA& ref)
	{
		num = ref.num;
		cout << "operator=(const AAA& ref)" << endl;
		return *this;
	}
};

class BBB 
{
private:
	AAA mem;
public:
	BBB(const AAA& ref) : mem(ref) { } //이니셜라이저를 이용한 멤버의 초기화
};									   //선언과 동시에 초기화가 이루어지는 형태의 바이너리 코드가 생성됨. ≈ AAA mem = ref;

class CCC
{
private:
	AAA mem;
public:
	CCC(const AAA& ref) { mem = ref; }	//대입연산을 이용한 멤버의 초기화
};										//생성자의 몸체부분에서 대입연산을 통한 초기화를 진행하면
										//각각 별도의 문장에서 진행하는 형태의 바이너리 코드가 생성됨.
int main(void)
{
	AAA obj1(12);
	cout << "***************" << endl;
	BBB obj(obj1);
	cout << "***************" << endl;
	CCC obj3(obj1);
	return 0;
}
