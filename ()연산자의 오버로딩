#include <iostream>

using std::cout;
using std::endl;
using std::ostream;

class Point
{
private:
	int xpos, ypos;
public:
	Point(int x, int y) : xpos(x), ypos(y) { }
	Point operator+(const Point& pos) const     //+연산자 오버로딩
	{
		return Point(xpos + pos.xpos, ypos + pos.ypos);   //return문으로 임시객체를 반환하는식으로 문장의 구성이 가능하다.
	}
	friend ostream& operator<<(ostream&, const Point&);
};

ostream& operator<<(ostream& os, const Point& pos)
{
	cout << '[' << pos.xpos << ", " << pos.ypos << ']' << endl;
	return os;
}

class Adder
{
public:
	int operator()(const int& n1, const int& n2)
	{
		return n1 + n2;
	}
	double operator()(const double& e1, const double e2)
	{
		return e1 + e2;
	}
	Point operator()(const Point& pos1, const Point& pos2)
	{
		return pos1 + pos2;
	}
};

int main(void)
{
	Adder adder;
	cout << adder(1, 3) << endl;    //4
	cout << adder(1.3, 3.5) << endl;    /4.8
	cout << adder(Point(3, 4), Point(1, 5));    [4, 9]
	return 0;
}
